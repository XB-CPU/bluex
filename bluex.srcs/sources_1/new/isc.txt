# the following code is the assemble version of the C code here:
# int sum = 0;
# for (int i = 0 ; i < 0x10; ++i)
# {
# 	if (i%2 == 1)
# 	{
# 		sum = sum - i;
# 	}
# 	else {
# 		sum = sum + i;
# 	}
# }

#param, r1:sum, r2:i, r3:tmp, r4:1, r5:0x10
mirl r4, 1b
mirl r6, 80h
mirl r7, 78h
mirl r5, 10h
mirl r2, 40H
mirl r1, 20H
mirl r0, 40h # r0 is still 0
mirl r1, 30H
add r1, r0, r0 # r1 is still 0
subi r2, r0, 0 # r2 is still 0

#for
andi r3, r2, 1b
#xor r7, r7, r6
beq r3, r4, 3
#even
add r1, r1, r2
jmp 2
#odd
xor r7, r7, r6
sub r1, r1, r2
addi r2, r2, 1
bne r2, r5, -8

#over
jmp -1

#mirl r1, 20 # rd=20
#mirl r5, 20h # rd=32
#add r3, r1, r2 # rd=20, data hazard with 1
#addi r4, r3, 10 # rd=30, data hazard with 3
#orl r3, r1, r2 # r3=r1 | r2 # rd=20
## because here is actually relative displacement
#jmp -1